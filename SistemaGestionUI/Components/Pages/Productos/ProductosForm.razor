@inject NavigationManager NavigationManager
@inject ProductosServices Service

<EditForm Model="Producto" OnValidSubmit="CrearOActualizarProducto" FormName="productos-form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="description">Descripcion</label>
        <InputText type="text" class="form-control" id="descripcion" @bind-Value="Producto.Description" />
    </div>
    <div class="form-group">
        <label for="buyprice">Precio compra</label>
        <InputNumber type="number" class="form-control" id="precio-compra" @bind-Value="Producto.BuyPrice" />
    </div>

    <div class="form-group">
        <label for="sellprice">Precio de Venta</label>
        <InputNumber type="number" class="form-control" id="precioVenta" @bind-Value="Producto.SellValue" />
    </div>

    <div class="form-group">
        <label for="stock">Stock</label>
        <InputNumber type="number" class="form-control" id="stock" @bind-Value="Producto.Stock" />
    </div>

    <div class="form-group">
        <label for="totalprice">Total Producto</label>
        <InputNumber type="number" class="form-control" id="totalProducto" @bind-Value="Producto.TotalPrice" />
    </div>

    <div class="form-group">
        <label for="category">Categoria</label>
        <InputText type="text" class="form-control" id="categoria" @bind-Value="Producto.Category" />
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {


    [Parameter]
    public Producto Producto { get; set; } = null!;

    protected override void OnInitialized()
    {

    }

    public void CrearOActualizarProducto()
    {
        if(Producto.Id > 0)
        {
            Service.UpdateProducto(Producto.Id, Producto);
        } 
        else
        {
            Service.InsertProducto(Producto);
        }

        NavigationManager.NavigateTo("/productos");
    }
}
