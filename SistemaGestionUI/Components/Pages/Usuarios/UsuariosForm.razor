@inject NavigationManager NavigationManager
@inject UsuarioServices Service

<EditForm Model="Usuario" OnValidSubmit="SubmitUsuario" FormName="usuario-form">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="nombre">Nombre</label>
        <InputText type="text" class="form-control" id="nombre" @bind-Value="Usuario.Name" />
    </div>
    <div class="form-group">
        <label for="apellido">Apellido</label>
        <InputText type="text" class="form-control" id="apellido" @bind-Value="Usuario.LastName" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText type="email" class="form-control" id="email" @bind-Value="Usuario.Mail" />
    </div>

    <div class="form-group">
        <label for="password">Contraseña</label>
        <InputText type="password" class="form-control" id="password" @bind-Value="Usuario.Password" />
    </div>

    <div class="form-group">
        <label for="nombre-usuario">Nombre Usuario</label>
        <InputText type="text" class="form-control" id="nombre-usuario" @bind-Value="Usuario.UserName" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>


@code {
    [Parameter]
    public Usuario Usuario { get; set; } = null!;

    protected override void OnInitialized()
    {
        
    }

    private void SubmitUsuario()
    {
        if (Usuario.Id == 0)
            Service.InsertUsuario(Usuario);
        else
            Service.UpdateUsuario(Usuario.Id, Usuario);

        NavigationManager.NavigateTo("/usuarios");
    }
}
