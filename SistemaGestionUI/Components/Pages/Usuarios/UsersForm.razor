@inject NavigationManager NavigationManager
@inject UserServices Service

<EditForm Model="user" OnValidSubmit="SubmitUser" FormName="user-form">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="name">Nombre</label>
        <InputText type="text" class="form-control" id="name" @bind-Value="user.Name" />
    </div>
    <div class="form-group">
        <label for="lastname">Apellido</label>
        <InputText type="text" class="form-control" id="lastname" @bind-Value="user.LastName" />
    </div>

    <div class="form-group">
        <label for="mail">Email</label>
        <InputText type="mail" class="form-control" id="mail" @bind-Value="user.Mail" />
    </div>

    <div class="form-group">
        <label for="password">Contraseña</label>
        <InputText type="password" class="form-control" id="password" @bind-Value="user.Password" />
    </div>

    <div class="form-group">
        <label for="userName">Nombre Usuario</label>
        <InputText type="text" class="form-control" id="userName" @bind-Value="user.UserName" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>


@code {
    [Parameter]
    public UserEntity user { get; set; } = null!;

    protected override void OnInitialized()
    {
        
    }

    private void SubmitUser()
    {
        if (user.Id == 0)
            Service.InsertUser(user);
        else
            Service.UserUpdate(user.Id, user);

        NavigationManager.NavigateTo("/users");
    }
}
